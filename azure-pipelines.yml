# .NET Desktop

# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- net-standard

pool:
  vmImage: 'windows-latest'

variables:  
  solution: './zero.sync'
  core-solution: './zero.core'
  cocoon-solution: './zero.cocoon'
  test-solution: './zero.test'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  displayName: Use .NET 6.0
  inputs:
    packageType: 'sdk'
    version: '6.0.x'

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '$(solution)'
    title: "Nuget Restore '$(solution)'"
    
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    configuration: '$(buildConfiguration)'
    projects: '$(core-solution)'
    title: "build '$(core-solution)'"

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    configuration: '$(buildConfiguration)'
    projects: '$(cocoon-solution)'
    title: "build '$(cocoon-solution)'"

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    configuration: '$(buildConfiguration)'
    projects: '$(solution)'
    title: "build '$(cocoon-solution)'"

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    configuration: '$(buildConfiguration)'
    projects: '$(test-solution)'
    title: "build '$(test-solution)'"

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    arguments: '-c $(buildConfiguration) --collect "Code coverage"'
    projects: '$(test-solution)'
    testRunTitle: 'Unit Tests'
    title: "test '$(test-solution)'"
    publishTestResults: true

