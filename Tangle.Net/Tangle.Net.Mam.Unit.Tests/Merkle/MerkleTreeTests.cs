namespace Tangle.Net.Mam.Unit.Tests.Merkle
{
  using Microsoft.VisualStudio.TestTools.UnitTesting;

  using Tangle.Net.Cryptography;
  using Tangle.Net.Cryptography.Curl;
  using Tangle.Net.Entity;
  using Tangle.Net.Mam.Merkle;

  /// <summary>
  /// The merkle tree tests.
  /// </summary>
  [TestClass]
  public class MerkleTreeTests
  {
    #region Public Methods and Operators

    /// <summary>
    /// The test get tree by index builds new tree corretcly.
    /// </summary>
    [TestMethod]
    public void TestGetTreeByIndexBuildsNewTreeCorretcly()
    {
      var seed = new Seed("L9DRGFPYDMGVLH9ZCEWHXNEPC9TQQSA9W9FZVYXLBMJTHJC9HZDONEJMMVJVEMHWCIBLAUYBAUFQOMYSN");
      var tree = CurlMerkleTreeFactory.Default.Create(seed, 0, 10, SecurityLevel.Medium);
      var treeFromIndex = tree.GetSubtreeByIndex(5);

      Assert.AreEqual(
        "NYLBLUAXARLUZVCP9LPDETZL9XAG9XQFXUPOZIEFAFQ9NMDOAQCOEHLXGPHSQHKXUTTNKWHFDKJLOMRZVLGRYZCIKNCDFURBR9DZZYCYXFVTSRHXAFPUWZMOQYIFXQUQK9UBXMZKZLUMVTUOGVCXBYMJQIVKMJMVMMT9UUPC9PX9G9LLULFZSICBCAJQDPOEMBNILCSLUKTYPYXSMUNJUKVVCIEJLBXSIEZVUKAFQAJHRHSLQENBSFVCHTWEK9RAOVIYABNJECA9XVJLZKLEYUPCNDRSQNXQZPPEUUSU9EGKM9WC99ZGAXXPVNDMWQEQNEQMLLPAVJGGJRSALGHDTFTQVMBBWTXJAJAIXDPKXWKLQUVDLRMAUYSKCEAEWNKZHSYGNWI9NEVZYMGSHNZB9BTVDRFLAS9KVQQHNN99PQATLTDEDZMVPDCXFQI9G9VUVOHDTOVKXLESIMCRRMFEMRWXWKBDQUWN99N9TNMVYSW99QRKXAFZLMIIWBJPNRYKBTLFKNLZXIAMCXTIPJSZJZISSUORHGBOVXY9KDS9BLVFR9XYHMZZNWLEP9CHNSRLSIBORMDYKGFCVRFBHOFGCSMAEKVLHQJGFJKCLPMPVMXYXOZABBYARWTIBIWABMXFRNB9FYONLWAFYSZQDTQCUCSEZN9QIAJFB9F9EPFQPHXHSODKVBSNWDOPDBIC9QSMMPTFYZZLXMGLZB9SQREXXCBSMUYVFTGHHJ9JWQWXYSSPZIPWPTVKCDZDJUQABQHGURIVWFGMSIVTNHHXGOUUJLRQVNPWJLDWADARSSXTWM9DTQ9XDUZRGFWQRMUCBEQNKURYMPLCTOKUAOVAKJBKEZHNGVLLFDKIBKLDEVBBBSPBZQFNNFFTWINQ9DRJAYRRKEPJSZQ9TTF9IWCOAPDUXEKZLIDAMBBNNDBTCFDJGRG9SJZYLOJCRWCNXNFNCHMAUFXCMAMRCXAIUZKCWB9S9SUZMFXXJMTNU9UQEVVAZDEIYTLIMABVDKRTMMNTHLRLHTKUCQTOSIEOYMACENRKSUNSFWMHZKNLXMKWUWLTZPUNRCBDSWHH9OB9ZOFXRTCXCCIOKUWDKUVTYAIZYGKFYHDZO9QNK9AVNGLORZBGUMCVKWKZHMXAHOPNTXFCPVYUAPGAB9SKSDKUGYLCW9RZLJNJLWLGEGHELYKJRKCLOMSVDVDUKCPMWECPHFQXT9SXNOOSYTY9QAKPZGTPIPQGTSLTAJMSTNWSCPHIJEKTSSQRTPEMBR9AMRZRHVCFWAOKMIPKCCSUFSVCALRBIAPPIPHJWQXXQYZEBOWMMVTBKNTHQTBKCIE9ZBEJBV9PIXDUAJHAJZO9IZYNEUEQWVHNXURIIMWQFJF9UEPNCLOTCHDKPMAAJLFTCSUIKFWGFAAVKHUMTSYBKTEIAUNDCXUHUNRFONO9VZYVR9ELGLLQJM9PZKWVG9ADYGNLLLTRPALJHKYNLN9HBELAZ999DFEKJYAUBRMCHQBDFKYBXXZXFII9YWMZSCLMMRZEPNKSUKYPAJZYURIMLEIDDBMNRNMZHAMY9JIILNKTMWVRPEBALUBBMHDOYBGZMLAP9QYSOHJJZWOWSCLEPFR9FZZCODPSNHOUG9PZTBIVADTPNEBGCGBIXRNAZ9AQIU9UBRAEGJFLUUK9NPDPAYRSJNELXFTXWG9FXXNUOCSN9EDXIKDXCSFVXLJL99ZYBSYWUTEZJRQCKZQNXZMBYNMB9RALVC9IMKQZNRLHPRIYDUPEECZXHVQBVAWMDWMRTPCAVFHWUURAQOIBHXDVJHITPFADVNGBASDRN9UODWCPVYYDACDGCWAVJIFERKU9CDSOHGJRQRKIJEHJVBPZNE9TTPVUYXHQG9TTKVCUBGMWXYTZRWNGO9LZSMXYAS9UDQKDYDJUWQPZOQRHOBTOHQJ9LGTIYFAHXLUIBSKLCJDFRTSMR9OPXWNCFXXZINIAGUYXCZEXQQATSTFTC9NQREJJFXASBVRYJAHIYJNQDCUZPTOTBAUGKPDMUHVMFH9RYWMPCZBLHDMHTQSJIPKQUTVPXZMUWOIOVKYXD9HQPUPZHXCQPJMXUYDWUOXBLJLQZXLUMOJCTOGVCKKDS9CICFSPLRNPHOTCSOGYUHLDUCXXADIWOD9NXHMMIUIFTNHPXKVPKCV9QSLXFB9UFAPRVPLFOXR9IYCCQF9RQEUFEIQXGRQIBCJOZIEJYMIBJLTPPXADMDJB9SQHZKYDQOZAJ9YLZTBXIWDJGHXOAZOGYKGFHMRMEIQZCNCYXBEIGWOAFNENKQEWJCZQYNZR9YZHXMER9AHKCFPQY9XBEJM9HHZQWKESBOJRKKJXBBMZHTZMIJ9ZOYEPZDUAHWCSHLYJOQGBIZYRUGGLWIWQAIEW9QTIR9TCGHQBGFT9ZEWDQFAEVXCJMXIYSACZEYCYHLSTFFDCHSZJWQOHQQPKYSDBTYTIELXPYBUPLUSVIJADAAZFXXXUSU9ZCIGUYZQTCCBSLEBSLIYPPDDRKKM99HIYYOURCMAYGX9DXPJGJSUIEJBGOYUVITME9SKENDO9MEMFZQGXTWXJSKCUOLOLOHIFWXACHNPUYREUIQDBDTNWHIEMBNJOEDPIFPMCMCDAYBIPLEUNEXOLJMGFFYEOBSR9VWCEQHCFXGIXUKLHQYVPUSEMFMP9GFGMLTRGUKRTUZMUTXHKIKRXHEGI9UUEG9TQQAKUOXHUOG9PPBNUEIHXKRDDIOFYXPZRSKULGZJBPXZXAG9OIU9AR9VGXEKIWX9HULCKNJQ9DBJVWTPDVTOMHSC9DHXEKYRFNEEYIAHKOECWKDJEVPIIXIPWXU9GRY9ANFWYFKAIARTSHFOQEELWSFYGGISZEFHJGHQMMRVUHQSZ9DFOOGIUWQABZPNPCHVNO9YFXPARYJSININADLWTZLIYPHKFDGAQNMIQASUMENMKLXZVGTMQIZHX9GVAEVFROJFSJEMSAWUJKLRLEZUGHUBLLPRVMFGWFSSAMDCDBWIJVHJENSDGQFTAOVFPICNKKFZRBSHRQXVNJKEHWJYUEV9FBABNKDPDBTETIVIEILYWNICGX9IBSHN9QTD9EGQYQNFOPSSXDWT9MIWCLQIDDEQVSWZVEXKWCOTEMFPHMRNQHHDKNZIDICCJZ9FJMFSEVFQLKBDCYIDCHAHEOSSEPWJJWSZLJZUQYAAJDEDEECIMHOTNHCUYUNZFLCUUGDWZIH9WHAGORSYRFJFLVICPNHUFQERWSXAYROJRATMMUA9FAUZSAVYL9CYUNAXPNNZXFKPOSEEUNHFU9PJTYQZOBVZMNDUX9UHHAZLGTGNSGQJAMWV9GENXENSQHS9QEHUAHUWULCXZAWIS9OHOMIRHYSSXDYXFMZACLTMGIRBIWLPMRJMQKVISDKNRZNFIKNJYNMZJHUFQIFETZW9FJOUDYAYSTMMUZYTUHLCQFGPXMQNGAEUE9DNWKEHBVXHXSYKPNUAOOZIQPLUA9RMRLWRCKIXMUOCQJFOGJNXJSCLOCDFVWINRDUI9QSSROPOQVXDPPNFMAG9QOASWNWGZMXXBMIET9MMTURTPPWJDDCMGZAFUGTCTNDZZKKRM9HNXPAMOFVVBA9XXBRVYOFXAJPTHQQMEANR9BPNCL9YCOCW9DITBZ9LQJMXUQUVVFFIQZIYUZLAAAQGOEKQGAETQZFVCZBXPHAH9I9JTGU9EBPLVSEYAATCVYVBWBFZVRQIU9FQ9IKEHLNEOCYYLLSDTTZKORARLEYGITFVQDOYD9AEKKTNTYALYWPUSLJESVJSQQLILCTMWMBQPKKTIXZFMZZKWWJDBYUQQQXTXS9VHNUZXFSSGYHWDXPHKCWCQCMVEOPATJHARHEDLBXLULMLZSYIVBSOFBQLZJEZYPQYOJJMOVHQJEANYVVVBYSJBLKOBUJVKRLZ9DUYZNWSHWXHNDG9NLMLRFAFGJ9CHYWRZJLTDKLBZMQKQHMUDREIWSDDRNA9VCWCBIMMCLGQT9AVGAWIKJLCYZOHKHY9AFOGPFIMPDD9QDIDRCCJR9DNJZBNQIXGMLJQKGQDCVXSINYNIFYWQHMSYBKNJMIJGLE9ZNHCQCRZH9REHWIYSQIKGECPWEUSZ9GRMP9TXFUMQWFRHBTHNFNLNFTRWPVHBSAMSJHDIWCOX9PHORXDJMRGUDWMPWGRFYGOZROIBFFBVTNRUIKIDJJ9GUSCSTFETBKOWKWOAPUUCMOLMLF9G9QIOAOOICY9DVAVEITQYVUIDXRENVODSQMLSAWGCDYWCUMKYRXOZGRZWOJOKJMXAHQSOABLDSBBBCEJKA9NF9AJPWKLI9HAWTIPFOEYSCCFZTAACPTTIDMTWKCKLMOOTUUFEGJ",
        treeFromIndex.Key.Value);

      var merkleNodes = treeFromIndex.Leaves;
      Assert.AreEqual(4, merkleNodes.Count);
      Assert.AreEqual("OGOUOFEKVRKPKGNAMWMEMK9UNMBIWEBMPLZENVIDLLVUXTMUEYVMHUNTNBNKACSDMSWUYX9WWQSIBFATG", merkleNodes[0].Hash.Value);
      Assert.AreEqual("QKNDPBYPQOCRPUGZFEYEROXWBUNMMBNGYXEXPW9OLUOCP9XBROCHAPJVHCORTZ9TUXSSXWXGPFKWDYQB9", merkleNodes[1].Hash.Value);
      Assert.AreEqual("WAURJE9CZQFPLENUQGCUMRJWCIVSEDJFG9YEXNZ9IMAPXCLMEQFTRBJEVFPIYZ9BBEVRSJAMLQRMCNBFH", merkleNodes[2].Hash.Value);
      Assert.AreEqual("MUITSFKFPULPNVPETA9JAMKOYKOQSYGIPGSOGEEXCV9OBNCIGBFUOCWNBRPXWJKCSFXWIKVGIFAXAFXBQ", merkleNodes[3].Hash.Value);

      Assert.AreEqual("OGOUOFEKVRKPKGNAMWMEMK9UNMBIWEBMPLZENVIDLLVUXTMUEYVMHUNTNBNKACSDMSWUYX9WWQSIBFATGQKNDPBYPQOCRPUGZFEYEROXWBUNMMBNGYXEXPW9OLUOCP9XBROCHAPJVHCORTZ9TUXSSXWXGPFKWDYQB9WAURJE9CZQFPLENUQGCUMRJWCIVSEDJFG9YEXNZ9IMAPXCLMEQFTRBJEVFPIYZ9BBEVRSJAMLQRMCNBFHMUITSFKFPULPNVPETA9JAMKOYKOQSYGIPGSOGEEXCV9OBNCIGBFUOCWNBRPXWJKCSFXWIKVGIFAXAFXBQ", treeFromIndex.ToTryteString().Value);
    }

    #endregion
  }
}